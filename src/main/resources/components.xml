<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation=
               "http://www.springframework.org/schema/beans
               http://www.springframework.org/schema/beans/spring-beans.xsd
               http://www.springframework.org/schema/context
               http://www.springframework.org/schema/context/spring-context-4.3.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd"
       default-init-method="turnOnLights"
       default-destroy-method="turnOfLights">
    <context:component-scan
        base-package="com.example.spring_try">
    </context:component-scan>

    <bean id="audience" class="com.example.spring_try.Audience"/>
    <bean id="magician" class="com.example.spring_try.models.impl.Magician" />
    <aop:config>
        <aop:aspect ref="audience">
            <aop:pointcut id="performance" expression="execution(* com.example.spring_try.models.Performer.perform())"/>
            <aop:before method="takeSeats" pointcut-ref="performance"/>
            <aop:before method="turnOffCellPhones" pointcut-ref="performance"/>
            <aop:after-returning method="applaud" pointcut-ref="performance"/>
            <aop:after-throwing method="demandRefund" pointcut-ref="performance"/>
        </aop:aspect>
        <aop:aspect ref="magician">
            <aop:pointcut id="thinking" expression="execution(* com.example.spring_try.models.Thinker.thinkOfSomething(String)) and args(thoughts)"/>
            <aop:before method="interceptThoughts" pointcut-ref="thinking" arg-names="thoughts"/>
        </aop:aspect>
    </aop:config>



<!--    <bean id="duke"
          class="com.example.spring_try.models.impl.Juggler">
        <constructor-arg value="15"/>
    </bean>
    <bean id="sonnet29"
          class="com.example.spring_try.models.extra.impl.Sonnet29" />
    <bean id="poeticDuke"
          class="com.example.spring_try.models.impl.PoeticJuggler">
        <constructor-arg value="15" />
        <constructor-arg>
            <bean class="com.example.spring_try.models.extra.impl.Sonnet29"/>
        </constructor-arg>
    </bean>

    <bean id="theStage"
          class="com.example.spring_try.Stage"
          factory-method="getInstance" />
    <bean id="ticket"
          class="com.example.spring_try.Ticket"
          scope="prototype" />
    <bean id="auditorium"
          class="com.example.spring_try.Auditorium"
          init-method="turnOnLights"
          destroy-method="turnOfLights" />
    <bean id="kenny"
          class="com.example.spring_try.models.impl.Instrumentalist"/>
    <bean id="instrument"
          class="com.example.spring_try.models.extra.impl.Saxophone" />
    <bean id="piano"
          class="com.example.spring_try.models.extra.impl.Piano" />
    <bean id="guitar"
          class="com.example.spring_try.models.extra.impl.Guitar"/>
    <bean id="cymbal"
          class="com.example.spring_try.models.extra.impl.Cymbal"/>
    <bean id="harmonica"
          class="com.example.spring_try.models.extra.impl.Harmonica"/>

    <bean id="hank"
          class="com.example.spring_try.models.impl.OneManBand">
        <property name="instruments">
            <map>
                <entry key="GUITAR" value-ref="guitar"/>
                <entry key="CYMBAL" value-ref="cymbal"/>
                <entry key="HARMONICA" value-ref="harmonica"/>
            </map>
        </property>
        <property name="properties">
            <props>
                <prop key="GUITAR">STRUM STRUM STRUM</prop>
                <prop key="CYMBAL">CRASH CRASH CRASH</prop>
                <prop key="HARMONICA">HUM HUM HUM</prop>
            </props>
        </property>
    </bean>-->
</beans>